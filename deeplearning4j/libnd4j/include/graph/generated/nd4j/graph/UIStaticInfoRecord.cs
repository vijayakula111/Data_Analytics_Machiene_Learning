// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace nd4j.graph
{

using global::System;
using global::FlatBuffers;

public struct UIStaticInfoRecord : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static UIStaticInfoRecord GetRootAsUIStaticInfoRecord(ByteBuffer _bb) { return GetRootAsUIStaticInfoRecord(_bb, new UIStaticInfoRecord()); }
  public static UIStaticInfoRecord GetRootAsUIStaticInfoRecord(ByteBuffer _bb, UIStaticInfoRecord obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public UIStaticInfoRecord __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public UIInfoType InfoType { get { int o = __p.__offset(4); return o != 0 ? (UIInfoType)__p.bb.GetSbyte(o + __p.bb_pos) : UIInfoType.GRAPH_STRUCTURE; } }

  public static Offset<UIStaticInfoRecord> CreateUIStaticInfoRecord(FlatBufferBuilder builder,
      UIInfoType infoType = UIInfoType.GRAPH_STRUCTURE) {
    builder.StartObject(1);
    UIStaticInfoRecord.AddInfoType(builder, infoType);
    return UIStaticInfoRecord.EndUIStaticInfoRecord(builder);
  }

  public static void StartUIStaticInfoRecord(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfoType(FlatBufferBuilder builder, UIInfoType infoType) { builder.AddSbyte(0, (sbyte)infoType, 0); }
  public static Offset<UIStaticInfoRecord> EndUIStaticInfoRecord(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<UIStaticInfoRecord>(o);
  }
};


}
